class RELATION:
    def __init__(self, matrix):
        self.matrix = matrix
        self.n = len(matrix)  # Size of the matrix (assuming it's a square matrix)
        
    def is_reflexive(self):
        # Check if all diagonal elements are 1
        for i in range(self.n):
            if self.matrix[i][i] != 1:
                return False
        return True
    
    def is_symmetric(self):
        # Check if the matrix is symmetric
        for i in range(self.n):
            for j in range(self.n):
                if self.matrix[i][j] != self.matrix[j][i]:
                    return False
        return True
    
    def is_anti_symmetric(self):
        # Check if there are no pairs (i, j) and (j, i) with i != j
        for i in range(self.n):
            for j in range(self.n):
                if i != j and self.matrix[i][j] == 1 and self.matrix[j][i] == 1:
                    return False
        return True
    
    def is_transitive(self):
        # Check if the relation is transitive
        for i in range(self.n):
            for j in range(self.n):
                if self.matrix[i][j] == 1:
                    for k in range(self.n):
                        if self.matrix[j][k] == 1 and self.matrix[i][k] == 0:
                            return False
        return True
    
    def check_relation(self):
        # Check for equivalence or partial order
        if self.is_reflexive() and self.is_symmetric() and self.is_transitive():
            return "Equivalence Relation"
        elif self.is_reflexive() and self.is_anti_symmetric() and self.is_transitive():
            return "Partial Order Relation"
        else:
            return "Neither Equivalence nor Partial Order Relation"

# Function to take input from the user
def get_relation_matrix():
    n = int(input("Enter the size of the relation matrix (n x n): "))
    matrix = []
    print(f"Enter the {n} x {n} relation matrix:")
    for i in range(n):
        row = list(map(int, input(f"Enter row {i + 1} (space-separated): ").split()))
        if len(row) != n:
            print("Error: Row size does not match the matrix size. Please enter again.")
            return get_relation_matrix()
        matrix.append(row)
    return matrix

# Main function to drive the program
def main():
    matrix = get_relation_matrix()
    relation = RELATION(matrix)
    print(relation.check_relation())  # Output will depend on the matrix

# Run the program
if __name__ == "__main__":
    main()
